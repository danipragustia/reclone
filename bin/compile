#!/bin/sh

set -e

indent() {
  sed -u 's/^/       /'
}

# Install Rclone
echo "-----> Installing rclone"
BUILD_DIR=$1
CACHE_DIR=$2
VENDOR_DIR="vendor"
FILE="rclone-current-linux-amd64.zip"
DOWNLOAD_URL="https://downloads.rclone.org/$FILE"

mkdir -p "$CACHE_DIR"

if ! [ -e "$CACHE_DIR/$FILE" ]; then
  echo "-----> Fetching Latest Rclone binaries at ${DOWNLOAD_URL}" | indent
  wget $DOWNLOAD_URL -q -O "$CACHE_DIR/$FILE"
else
  filestr=$(find . -name "$CACHE_DIR/$FILE" -mtime +1 -print)
  if [ "$filestr" = "" ]; then
    echo "-----> cache Expired, Fetching Latest Rclone at ${DOWNLOAD_URL}" | indent
    wget $DOWNLOAD_URL -q -O "$CACHE_DIR/$FILE"
  else
    echo "build using cached source"  | indent
  fi
fi

cd "$BUILD_DIR"
mkdir -p "$VENDOR_DIR"
cd "$VENDOR_DIR"
mkdir -p rclone
cd rclone
cp "$CACHE_DIR/$FILE" .
unzip -qqj "$FILE"
rm -rf "$FILE"

echo "exporting PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/rclone.sh"
mkdir -p "$(dirname "$PROFILE_PATH")"
echo 'export PATH="$PATH:${HOME}/vendor/rclone"' >> $PROFILE_PATH
echo "Rclone installed"  | indent

# Install aria2
echo "-----> Installing Aria2"

FILE="aria2-1.35.0-linux-gnu-64bit-build1"
FILE_ARC="${FILE}.tar.bz2"
DOWNLOAD_URL="https://github.com/q3aql/aria2-static-builds/releases/download/v1.35.0/$FILE_ARC"

if ! [ -e "$CACHE_DIR/$FILE_ARC" ]; then
  echo "-----> Fetching Aria2 binaries at ${DOWNLOAD_URL}" | indent
  wget "$DOWNLOAD_URL" -q -O "$CACHE_DIR/$FILE_ARC"
else
  echo "build using cached source"  | indent
fi

cd "$BUILD_DIR/$VENDOR_DIR"
mkdir -p aria2c
cd aria2c
cp "$CACHE_DIR/$FILE_ARC" .
tar jxf "$FILE_ARC"
mv "$FILE"/* .
rm -rf "$FILE_ARC" "$FILE"

# Install p7zip

echo "-----> Installing p7zip"
FILE="p7zip_16.02"
FILE_ARC="${FILE}.tar.gz"
DOWNLOAD_URL="https://raw.githubusercontent.com/danipragustia/prebuilt-binary/master/$FILE_ARC"
if ! [ -e "$CACHE_DIR/$FILE_ARC" ]; then
  echo "-----> Fetching p7zip binaries at ${DOWNLOAD_URL}" | indent
  wget "$DOWNLOAD_URL" -q -O "$CACHE_DIR/$FILE_ARC"
else
  echo "build using cached source"  | indent
fi

cd "$BUILD_DIR/$VENDOR_DIR"
mkdir -p p7zip
cd p7zip
cp "$CACHE_DIR/$FILE_ARC" .
tar xzf "$FILE_ARC"
mv "$FILE"/* .
rm -rf "$FILE_ARC" "$FILE"

# Exporting PATH

echo "exporting PATH" | indent
mkdir -p "$(dirname "$BUILD_DIR/.profile.d/aria2c.sh")"
mkdir -p "$(dirname "$BUILD_DIR/.profile.d/p7zip.sh")"
echo 'export PATH="$PATH:${HOME}/vendor/aria2c"' >> $PROFILE_PATH
echo 'export PATH="$PATH:${HOME}/vendor/p7zip/bin"' >> $PROFILE_PATH

# Moving rclone config

mkdir -p "$BUILD_DIR"/.profile.d
cat <<EOF >"$BUILD_DIR"/.profile.d/rclone_config.sh
cd "\$HOME"
if [ -f "rclone.conf" ]; then
  mkdir -p .config/rclone
  mv -f rclone.conf .config/rclone/rclone.conf
fi

# Moving aria2 config

cd "\$HOME"
if [ -f "aria2.conf" ]; then
  mkdir -p .aria2
  mv -f aria2.conf .aria2/aria2.conf
fi
